para hacer archivos parciales de sass

empiezan siempre con _ 

el nombre del archivo ya me da la data que es un archivo parcial de sass

para agregarlo lo importo, desde sass lo incluyo , usamos @import 'nombredelparcial'
(no hace falta el _ del principio,)sass ya asume que es el archivo sass

variables van solo al principio 

la idea es tener un solo sass y muchos imports no muchos sass 

mixins

@mixin          pueden tener parámetros

lo que me llega por paraámetro es la cantidad de ese mixin 

tambien debo importarlos

luego para usarlo

   @include nombre del mixin (parámetro);


Javascript "avengers: endgame".includes ('') funciona parecido al startwith() pero busca en cualquier parte del texto

hay un metodo que no me devuelve una lista si no que me devuelve un elemento

find a diferencia de filter y el primero que cumpla la condición me lo devuelve 

.find devuelve la película que estoy buscando 
tengo que avisarle a js que si movie es undefined (!movie) me de algún resultado para que no quede
vacio 


Api para guardar datos 

me va  a permitir consultárselo

const movies va a acceder de la api 

http 
HTTP GET ( HACER UN GET A UN SERVIDOR )
HTTP POST
HTTP DELETE
HTTP PUT
HTTP PATCH


Puedo desde una funcion de JS pegarle a una api 
uso una función


fetch como parámetro pongo la api, fetch es nativa de JS 

lo puedo usar y es estandar, fetch se guarda en una variable 






const prom = fetch('https://jsonplaceholder.typicode.com/todos')

si lo consologueo me devuelve algo que se llama promise que me deja manejar tareas asincrónicas
JS es single thread  = unithread 
se ejecuta de forma instantánea
const dobles = [1,2,3]. map(n=> n*2)

las promesas no son más que un objeto plano que tiene una accion 

(espera que la api nos devuleva algo )

el mettodo que recibe como parámetro es una función 

prom.then(res =>)

le voy a pasar una función que se va a ejecutar cuando la promesa se cumpla DENTRO DEL PARAMENTRO 

prom
.then(res=> res.json()) // esto me devuelve una nueva promesa
.then (data => {
    console.log (data);
})
\


puedo hacerlo también asi 

fetch('https://jsonplaceholder.typicode.com/todos')
.then(res=> res.json()) // esto me devuelve una nueva promesa
.then (data => {
    console.log (data);
    // implementamos el código para usar los datos 
})

cuando le pedimos cosas a la api le paso parámetros para decirle que queremos que nos devuleva
los parámetros se escriben con signo de pregunta 
?
query params

?apikey=valor del praámerto= 
https://www.omdbapi.com/?apikey=2fb7569a&t=
los parámatros se separan con & 
la misma api nos dice cómo el parámetro se debe llamar

para buscar directo de la api hago un fetch directamente ahi 
para no copiar y traer todos los objetos


